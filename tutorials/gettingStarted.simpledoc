Key
    "a first Macaulay2 session"
Headline
    Basic Introduction to Macaulay2
Description
    Code
       SUBSECTION "Basic usage"
    Text
        Your first input prompt will be ", TT "i1 : ", ".  In response to the prompt,
	  type ", TT "2+2", " and press return.  The expression you entered will be
	  evaluated - no punctuation is required at the end of the line.
    Example
        2+2
    Text
        The answer is displayed to the right of the output label ", TT "o1 =".
    Text
        Here is some arithmetic with fractions.
    Example
        3/5 + 7/11
    Text
         Notice the additional line of output labeled with ", TT "o2 :", ".
         Output lines labeled with colons provide information about the type of
         output.  In this case, the symbol ", TO "QQ", " is our notation for
         the class of all rational numbers, and indicates that the answer on
         the previous line is a rational number.
    Text
        Multiplication is indicated with ", TO "*".
    Example
        1*2*3*4
    Text
        Powers are obtained with ", TO "^".
    Example
        2^200
    Text
        Factorials are obtained with ", TO "!".
    Example
        40!
    Text
        Because some answers can be very long, it is a good idea to run the
     program in a window that does not wrap output lines, and allows the
     user to scroll left horizontally to see the rest of the output.  (See
        , TO "using Macaulay2 with emacs", ".)
    Example
        100!
        Multiple expressions may be separated by semicolons.
    Example
        1;2;3*4
        A semicolon at the end of the line suppresses the printing of the value.
    Example
        4*5;
        The output from the previous line can be obtained with ", TO "oo", ", even if 
     a semicolon prevented it from being printed.
    Example
        oo
        Lines before that can be obtained with ", TO "ooo", " and ", TO "oooo", ".  
     Alternatively, the symbol labeling an output line
     can be used to retrieve the value, as in the following example.
    Example
        o5 + 1
        To enter a string, use quotation marks.
    Example
        \"hi there\"
        A value can be assigned to a variable with ", TO "=", ".
    Example
        s = \"hi there\"
        Strings may be concatenated horizontally with ", TT "|", ", (see 
        , TO (symbol |, String, String), ").
    Example
        s | \" - \" | s
        or vertically with ", TT "||", ", (see ", TO (symbol ||, Net, Net), ").
    Example
        s || \" - \" || s
        A list of expressions can be formed with braces.
    Example
        {1, 2, s}
        Lists behave like vectors.
    Example
        10*{1,2,3} + {1,1,1}
        A function can be created with the arrow operator, ", TO "->", " .
    Example
        f = i -> i^3
        To evaluate a function, place its argument to the right of the function.
    Example
        f 5
        Functions of more than one variable take a parenthesized sequence of arguments.
    Example
         {
        g = (x,y) -> x * y
        g(6,9)
	  },
        The function ", TO "apply", " can be used to apply a function to each element of a list.
    Example
         {
        apply({1,2,3,4}, i -> i^2)
        apply({1,2,3,4}, f)
	  },
        The operator ", TO "..", " may be used to generate sequences of consecutive numbers.
    Example
        apply(1 .. 4, f)
        If the first argument to ", TT "apply", " is an integer ", TT "n", " then it stands for the list ", TT "{0, 1, ..., n-1}", ".
    Example
        apply(5, f)
        The function ", TO "scan", " is analogous to ", TO "apply", " except that no value is returned.  It may be used to implement loops in
     	  programs.
    Example
         {
        scan(5, i -> print (i, i^3))
        j=1; scan(10, i -> j = 2*j); j"},
        Most computations with polynomials take place in rings that may be specified in usual mathematical notation.
    Example
        R = ZZ/5[x,y,z];
        (We reserve single letter symbols such as ", TT "Z", " for use as variables in rings,
     hence we must use something like ", TO "ZZ", " to stand for the ring of integers.
     It may remind you of the \"blackboard bold\" font of AMSTeX.  If you prefer
        , TT "Z", " to ", TO "ZZ", ", you may put ", TT "Z=ZZ", " in your
        , TO "initialization file", ".  The symbols ", TT "ZZ/5", "
     represent the quotient ring ", TT "Z/5Z", ", and then ", TT "ZZ/5[x,y,z]", "
     represents the ring of polynomials in the variables x,y, and z with coefficients 
     in the ring ", TT "Z/5Z", ".)
    Example
        (x+y)^5
        Rings and certain other types of things acquire the name of the global variable they are assigned to.
    Example
        R
        To see the original description of a ring, use ", TO "describe", ".
    Example
        describe R
        A free module can be created as follows.
    Example
        F = R^3
        The i-th basis element of ", TT "F", " can be obtained as ", TT "F_i", ".  In this example, the valid values for ", TT "i", " are 0, 1, and 2.
    Example
        F_1
        Using a list of indices instead will produce the homomorphism corresponding to the basis vectors indicated.
    Example
        F_{1,2}
        Repetitions are allowed.
    Example
        F_{2,1,1}
        We can create a homomorphism between free modules with ", TO "matrix", "
     by providing the list of rows of the matrix, each of which is in turn
     a list of ring elements.
    Example
        f = matrix {{x,y,z}}
        Use ", TO "image", " to get the image of f.
    Example
        image f
        We may use ", TO "ideal", " to produce the corresponding ideal.
    Example
        ideal (x,y,z)
        We may use ", TO "kernel", " to compute the kernel of f.
    Example
        kernel f
        The answer comes out as a module that is expressed as the image of
	  a homomorphism whose matrix is displayed.  Integers inside braces to
	  the left of the matrix give the degrees of the basis elements of the
	  target of the matrix; they are omitted if the degrees are all zero.
	  In case the matrix itself is desired, it can be obtained with ", TO "generators", ", as follows.
    Example
        generators oo
        We may use ", TO "poincare", " to compute the Poincare polynomial.
    Example
        poincare kernel f
        We may use ", TO "rank", " to compute the rank.
    Example
        rank kernel f
        A presentation for the kernel can be obtained with ", TO "presentation", ".
    Example
        presentation kernel f
        We can produce the cokernel with ", TO "cokernel", "; no computation is performed.
    Example
        cokernel f
        The direct sum is formed with ", TO (symbol ++,Module,Module), ".
    Example
        N = kernel f ++ cokernel f
        The answer is expressed in terms of the ", TO "subquotient", " function, which
	  produces subquotient modules.  Each subquotient module is accompanied
	  by its matrix of generators and its matrix of relations.  These matrices
	  can be recovered with ", TO "generators", " and ", TO "relations", ".
    Example
         {
        generators N
        relations N
	  },
        The function ", TO "prune", " can be used to convert a subquotient
     	  module to a quotient module.
    Example
        prune N
        We can use ", TO "resolution", " to compute a projective resolution of the 
     	  cokernel of ", TT "f", ".
    Example
        C = resolution cokernel f
        To see the differentials we examine 'C.dd'.
    Example
        C.dd
        We can verify that ", TT "C", " is a complex by squaring the differential map.
    Example
        C.dd^2 == 0
        We can use ", TO "betti", " to see the degrees of the components of C.
    Example
        betti C
        Let's try a harder example.  We can use ", TO "vars", " to create a sequence
     	  of variables.
    Example
        R = ZZ/101[a .. r];
        We use ", TO "genericMatrix", " to make a 3 by 6 generic matrix whose
     	  entries are drawn from the variables of the ring ", TT "R", ".
    Example
        g = genericMatrix(R,a,3,6)
        Then we construct its cokernel with ", TO "cokernel", ".
    Example
        M = cokernel g
        We may use ", TO "resolution", " to produce a projective resolution of it, and
        , TO "time", " to report the time required.
    Example
        time C = resolution M
        As before, we may examine the degrees of its components, or display it.
    Example
        betti C
        We can make a polynomial ring with 18 ", TO "IndexedVariable", "s.
    Example
        S = ZZ/101[t_1 .. t_9, u_1 .. u_9];
        We can use ", TO "genericMatrix", " to pack the variables into 
     	  3-by-3 matrices.
    Example
         {
        m = genericMatrix(S, t_1, 3, 3)
        n = genericMatrix(S, u_1, 3, 3)
	  },
        We may look at the matrix product.
    Example
        m*n
        Let's produce the equations generated by the equations that assert
     	  that m and n commute with each other.  (See ", TO "flatten", ".)
    Example
        j = flatten(m*n - n*m)
        Let's compute a Groebner basis for the image of ", TT "j", " with ", TO "gb", ".
    Example
        gb j
        The resulting Groebner basis contains a lot of information.
	  We can get the generators of the basis, and even though we call upon
        , TO "gb", " again, the computation will not be repeated.
    Example
        generators gb j;
        The semicolon prevents the matrix of generators from appearing on the 
	  screen, but the class of the matrix appears -- we see that there are 26
	  generators.
    Text
        We can use ", TO "betti", " to see the degrees involved in the Groebner basis.
    Example
        betti gb j
     }
