
Use index.html in main directory or index-ipad.html, start the server from inside sockets: 
ruby RubyM2Server.rb

The php scripts that you're using from inside the Javascript files is sockets/M2Client.php and getResults.php. Be careful with different directories ...

-------

* clicking on "send to M2" button should move the cursor to next line

* sendToM2 functional on lesson pages, send everything up to that point
* table of contents: collapse/expand, fix sizes
* help button
* tutorial button
* back button change name
* somehow select font size
* 2 finger zoom
* colorization of keywords, comments, and strings


Done :) 
* detect orientation, side by side, over each other
* change titles: "on the web", "interactive" -> remove or change
* take out waiting time

**Planned Feature List** (some things might be out of date...)
resizing
incorporate input from tutorial
communicate the text-area size to M2 for correct string formatting or set reasonable default at beginning
undo feature	( command Z?)
syntax highlighting
autocompletion on Tab
save contents (input and output)
upload files that will turn into clickable tutorials, notebook style
Run all commands in the tutorial up to here
retrieve newest results right after sending a request and then less frequently

iPad: 
* scroll bars
* math keyboard, or buttons of most needed keys
* move text areas around
* newRing button: k, p, gens
* buttons for variables that are available

Involve Amelia, Frank Moore, Bart Snapp, other undergrad research people to have undergrads use this site, maybe develop lessons, develop a project that can be used with this site? Brandy (Elena?) thought computational algebra, any insight?



**Tutorial**
change structure: Preamble and div's should be in index.html, just load commands (and explanations)
Choice of tutorials to chose from
"run all" button, run selection/line


Use index.html in main directory or index-ipad.html, start the server from inside sockets: 
ruby RubyM2Server.rb

The php scripts that you're using from inside the Javascript files is sockets/M2Client.php and getResults.php. Be careful with different directories ... 


-----

in the cloud
education: for undergrads
why not sage: old version, too complex for simple in-classroom action, 

notebook structure not right format for M2
not suitable for mobile version
"join" sage: our notebooks can be made available through sage as well, for a different kind of users

colorization